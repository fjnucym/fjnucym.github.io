<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>pymysql在Windows下的使用</title>
      <link href="/2021/07/19/pymysql-zai-windows-xia-de-shi-yong/"/>
      <url>/2021/07/19/pymysql-zai-windows-xia-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="windows上的MySQL服务安装"><a href="#windows上的MySQL服务安装" class="headerlink" title="windows上的MySQL服务安装"></a>windows上的MySQL服务安装</h2><p><strong>MySQL下载：</strong><br>官网提供的安装MySQL的方式有三种：<br>在线安装版：mysql-installer-web-community.msi<br>离线安装版：mysql-installer-community.msi<br>解压缩版：mysql-8.0.25-winx64.zip<br>但实质上只有两种，一种是用安装包安装，一种是用压缩包安装。<br>官网下载：<a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></p><p><em>解压安装解压后的文件夹放在能找到的地方，后续都会有用</em></p><p><strong>管理员模式下运行CMD！</strong></p><p align="center"><img src="https://gitee.com/aiyudehua/drawing-bed/raw/master/https://gitee.com/aiyudehua/drawing-bed/tree/master/img/image-20210710211248662.png" /> </p>             <p align="center">根目录下的bin文件夹</p><p>进入解压后目录下的bin文件夹，此处能够启动mysql.exe程序。</p><p>输入以下命令并回车，初始化mysql…… 同时可以获取mysql的root账户生成的随机初始密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --console</span><br></pre></td></tr></table></figure><p>结果如下， 但由于初始化过一次。这里使用D:\Environment\mysql-8.0.25-winx64\data 下的 ==LAPTOP-65M4UVJB.err==文件里的内容代替。（目测日志输出都会在这里，只要找到以.err为后缀的文件用记事本打开即可）</p><p>密码是红色标明的位置。</p><p align="center"><img src="https://gitee.com/aiyudehua/drawing-bed/raw/master/https://gitee.com/aiyudehua/drawing-bed/tree/master/img/image-20210710212004821.png" /> </p><p align="center">一定要记住密码！实在实在不行去文件里看</p><p><strong>启动mysql服务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br><span class="line">sc start mysql</span><br></pre></td></tr></table></figure><p align="center"><img src="https://gitee.com/aiyudehua/drawing-bed/raw/master/https://gitee.com/aiyudehua/drawing-bed/tree/master/img/image-20210710212153589.png" /> </p><p align="center"></p><p><strong>进入mysql命令行</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p# 登陆root账户</span><br></pre></td></tr></table></figure><p>需要输入密码</p><p>账号:root  密码:初始化生成的</p><p align="center"><img src="https://gitee.com/aiyudehua/drawing-bed/raw/master/https://gitee.com/aiyudehua/drawing-bed/tree/master/img/image-20210710212335881.png" /> </p><p align="center">修改mysql账号密码</p><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;想要设置的密码&#x27;</span><br></pre></td></tr></table></figure><p><em>改个简单的密码！</em></p><h2 id="修改系统环境变量，任意处启动mysql命令行"><a href="#修改系统环境变量，任意处启动mysql命令行" class="headerlink" title="修改系统环境变量，任意处启动mysql命令行"></a>修改系统环境变量，任意处启动mysql命令行</h2><p>将==D:\Environment\mysql-8.0.25-winx64\bin==加入到系统环境变量中</p><p align="center"><img src="https://gitee.com/aiyudehua/drawing-bed/raw/master/https://gitee.com/aiyudehua/drawing-bed/tree/master/img/image-20210710212902863.png" /> </p><p align="center">修改环境变量</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>anaconda管理python环境</title>
      <link href="/2021/07/19/anaconda-guan-li-python-huan-jing/"/>
      <url>/2021/07/19/anaconda-guan-li-python-huan-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="Python学习笔记"><a href="#Python学习笔记" class="headerlink" title="Python学习笔记"></a>Python学习笔记</h1><h2 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h2><h3 id="使用anoconda管理python版本"><a href="#使用anoconda管理python版本" class="headerlink" title="使用anoconda管理python版本"></a>使用anoconda管理python版本</h3><p><strong>为什么使用要进行版本管理？</strong></p><blockquote><p>python的版本管理问题一直是很令人头疼，因为使用python时可能需要针对工作的环境下载不同的依赖包，配置适合某个版本的整体的依赖包，例如说进行图像处理学习的整个依赖环境、进行深度学习的整个依赖环境。</p><p>使用anoconda管理python和依赖包可以达到便捷的目的。</p></blockquote><p><strong>创建一个使用anaconda的python工程</strong></p><p>我们需要在pycharm中创建一个基于anoconda环境的工程，在创建时就可以选择对应的python版本，同时项目创建完成时会在 <em>D:\Environment\anaconda\envs（我此时anaconda的根目录下的envs）</em> 目录下创建一个与工程同名的文件夹用于存储完整的环境依赖。</p><p align="center"><img src="https://gitee.com/aiyudehua/drawing-bed/raw/master/https://gitee.com/aiyudehua/drawing-bed/tree/master/img/image-20210623230555160.png" /> </p><p align="center">创建一个包含完整依赖包的工程</p><p><strong>查看anaconda所有已创建的环境</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info -e # 控制台下</span><br></pre></td></tr></table></figure><p align="center"><img src="https://gitee.com/aiyudehua/drawing-bed/raw/master/https://gitee.com/aiyudehua/drawing-bed/tree/master/img/image-20210623231759367.png" /> </p><p align="center">查看已创建的环境</p><p><strong>激活环境</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">activate 工程名</span><br><span class="line"><span class="comment"># 例 activate Test</span></span><br></pre></td></tr></table></figure><p align="center"><img src="https://gitee.com/aiyudehua/drawing-bed/raw/master/https://gitee.com/aiyudehua/drawing-bed/tree/master/img/image-20210711234256673.png" /> </p>             <p align="center">进入learn-demo虚拟环境</p><p><strong>安装只属于此环境的依赖包</strong></p><p>进入新创建的环境后我们可以使用pip工具安装只属于此环境的依赖包</p><p>①使用离线文件(如.whl)安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install 文件全路径 # 可以将文件拖入控制台</span><br></pre></td></tr></table></figure><p>②在线安装(无翻墙情况下很慢)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install numpy==1.18.5# 指定安装包的版本</span><br></pre></td></tr></table></figure><p><strong>python依赖包的获取网址</strong></p><p>python使用pip工具进行包管理，有时候需要下载离线包，可以从pypi网址上搜索各个版本的安装包。</p><p><a href="https://pypi.org/">https://pypi.org/</a></p><p align="center"><img src="https://gitee.com/aiyudehua/drawing-bed/raw/master/https://gitee.com/aiyudehua/drawing-bed/tree/master/img/image-20210623225706899.png" /> </p><p align="center">pypi</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
